!=======================================================================
! Generated by: PSCAD v5.0.2.0
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : PVFarm_GFL_GFM_2_1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE PVFarm_GFL_GFM_2_1Dyn(N_units)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    EMTDC_X2COMP  ! 'Comparator with Interpolation'
!     SUBR    SimpleSF_15_2_1Dyn  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: N_units! Aliases: UN

! Electrical Node Indices

! Control Signals
      REAL     RT_1, RT_2, RT_3, RT_4, Vbase
      REAL     Fbase, Rated_MW, RT_5, Q_POC
      REAL     P_POC, Vrms_POC, Igrid_POC(3)
      REAL     Vgrid_POC(3), RT_6, RT_7, RT_8
      REAL     RT_9, RT_10, inv_Srate, RT_11
      REAL     m_VSM_var

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD2_1(2)

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOF, IT_0                         ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOF     = NSTOF
      NSTOF     = NSTOF + 26
      NPGB      = NPGB + 9
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 24
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 4
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_1     = STOF(ISTOF + 2)
      RT_2     = STOF(ISTOF + 3)
      RT_3     = STOF(ISTOF + 4)
      RT_4     = STOF(ISTOF + 5)
      Vbase    = STOF(ISTOF + 6)
      Fbase    = STOF(ISTOF + 7)
      Rated_MW = STOF(ISTOF + 8)
      RT_5     = STOF(ISTOF + 9)
      Q_POC    = STOF(ISTOF + 10)
      P_POC    = STOF(ISTOF + 11)
      Vrms_POC = STOF(ISTOF + 12)
      RT_6     = STOF(ISTOF + 19)
      RT_7     = STOF(ISTOF + 20)
      RT_8     = STOF(ISTOF + 21)
      RT_9     = STOF(ISTOF + 22)
      RT_10    = STOF(ISTOF + 23)
      inv_Srate = STOF(ISTOF + 24)
      RT_11    = STOF(ISTOF + 25)
      m_VSM_var = STOF(ISTOF + 26)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Igrid_POC(IT_0) = STOF(ISTOF + 12 + IT_0)
         Vgrid_POC(IT_0) = STOF(ISTOF + 15 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PVFarm_GFL_GFM_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[time-sig] Output of Simulation Time 
      RT_5 = TIME

! 20:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,0.1,RT_5,0.0,0.0,1.0,RVD2_1)
      RT_3 = RVD2_1(1)

! 30:[const] Real Constant 
      RT_10 = 1.0

! 50:[const] Real Constant 'Turbine Rated Active Power'
      Rated_MW = 0.25

! 60:[const] Real Constant 'Hz'
      Fbase = 60.0

! 70:[const] Real Constant 'Pref'
      RT_7 = 0.05

! 80:[const] Real Constant 'kV'
      Vbase = 33.0

! 90:[const] Real Constant 'Vref'
      RT_4 = 1.0

! 110:[const] Real Constant 'Qref'
      RT_6 = 2.0

! 120:[time-sig] Output of Simulation Time 
      RT_11 = TIME

! 130:[compare] Single Input Level Comparator 
!
!
      CALL EMTDC_X2COMP(0,0,3.0,RT_11,0.1,0.0,0.01,RVD2_1)
      m_VSM_var = RVD2_1(1)

! 150:[mult] Multiplier 
      RT_9 = N_units * Rated_MW

! 160:[mult] Multiplier 
      RT_8 = RT_7 * N_units

! 170:[div] Divider 
      IF (ABS(RT_9) .LT. 1.0E-100) THEN
         IF (RT_9 .LT. 0.0)  THEN
            inv_Srate = -1.0E100 * RT_10
         ELSE
            inv_Srate =  1.0E100 * RT_10
         ENDIF
      ELSE
         inv_Srate = RT_10 / RT_9
      ENDIF

! 230:[gain] Gain Block 
!  Gain
      RT_2 = inv_Srate * RT_6

! 240:[gain] Gain Block 
!  Gain
      RT_1 = inv_Srate * RT_8

! 250:[SimpleSF_15_2_1]  
      CALL SimpleSF_15_2_1Dyn(RT_1, RT_2, NINT(RT_3), RT_4, NINT(N_units&
     &), Fbase, Rated_MW, Vbase, 0.65, 1.4, 0.2, 0, 1.0, 0.0, 1.0, -0.5,&
     & 5.0, 30.0, 1, 1, 20.0, 200.0, 0.5, 20.0, 30.0, 1.0, 1.0, 0.5, 20.&
     &0, 0.1, 0.25, 0.5, 100.0, 3.0, 10.0, 22.22, 0.0, 0.01, 0.5, 20.0, &
     &0.5, 20.0, 1.2, 0.8, 1.3, 0.2, 1.0, 20.0, 0.3, m_VSM_var)


! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'T1'
!  TRANSFORMER SATURATION SUBROUTINE
      IVD1_1 = NEXC
      CALL TSAT1_EXE( (IBRCH+10), (IBRCH+11), (IBRCH+12),SS,1.0,0)

!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 1) = N_units
      STOF(ISTOF + 2) = RT_1
      STOF(ISTOF + 3) = RT_2
      STOF(ISTOF + 4) = RT_3
      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = Vbase
      STOF(ISTOF + 7) = Fbase
      STOF(ISTOF + 8) = Rated_MW
      STOF(ISTOF + 9) = RT_5
      STOF(ISTOF + 10) = Q_POC
      STOF(ISTOF + 11) = P_POC
      STOF(ISTOF + 12) = Vrms_POC
      STOF(ISTOF + 19) = RT_6
      STOF(ISTOF + 20) = RT_7
      STOF(ISTOF + 21) = RT_8
      STOF(ISTOF + 22) = RT_9
      STOF(ISTOF + 23) = RT_10
      STOF(ISTOF + 24) = inv_Srate
      STOF(ISTOF + 25) = RT_11
      STOF(ISTOF + 26) = m_VSM_var

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 12 + IT_0) = Igrid_POC(IT_0)
         STOF(ISTOF + 15 + IT_0) = Vgrid_POC(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------

!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PVFarm_GFL_GFM_2_1Out()

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    P3PH3         ! 
      REAL    Q3PH3         ! 
!     SUBR    DGTL_RMS3     ! '3 Phase Digital RMS Meter'
!     SUBR    SimpleSF_15_2_1Out  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Electrical Node Indices
      INTEGER  NT_3(3)

! Control Signals
      REAL     RT_4, Vbase, Fbase, Rated_MW
      REAL     Q_POC, P_POC, Vrms_POC
      REAL     Igrid_POC(3), Vgrid_POC(3), RT_6
      REAL     RT_7, RT_10

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER IPGB                                ! Control/Monitoring
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      IPGB      = NPGB
      NPGB      = NPGB + 9
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 24
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 4
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays 
!---------------------------------------

      RT_4     = STOF(ISTOF + 5)
      Vbase    = STOF(ISTOF + 6)
      Fbase    = STOF(ISTOF + 7)
      Rated_MW = STOF(ISTOF + 8)
      Q_POC    = STOF(ISTOF + 10)
      P_POC    = STOF(ISTOF + 11)
      Vrms_POC = STOF(ISTOF + 12)
      RT_6     = STOF(ISTOF + 19)
      RT_7     = STOF(ISTOF + 20)
      RT_10    = STOF(ISTOF + 23)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         Igrid_POC(IT_0) = STOF(ISTOF + 12 + IT_0)
         Vgrid_POC(IT_0) = STOF(ISTOF + 15 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_3(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models 
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'PVFarm_GFL_GFM_2_1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[const] Real Constant 

      RT_10 = 1.0

! 50:[const] Real Constant 'Turbine Rated Active Power'

      Rated_MW = 0.25

! 60:[const] Real Constant 'Hz'

      Fbase = 60.0

! 70:[const] Real Constant 'Pref'

      RT_7 = 0.05

! 80:[const] Real Constant 'kV'

      Vbase = 33.0

! 90:[const] Real Constant 'Vref'

      RT_4 = 1.0

! 110:[const] Real Constant 'Qref'

      RT_6 = 2.0

! 140:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      Igrid_POC(1) = ( CBR((IBRCH+1), SS))
      Igrid_POC(2) = ( CBR((IBRCH+2), SS))
      Igrid_POC(3) = ( CBR((IBRCH+3), SS))
      Vgrid_POC(1) = EMTDC_VVDC(SS, NT_3(1), 0)
      Vgrid_POC(2) = EMTDC_VVDC(SS, NT_3(2), 0)
      Vgrid_POC(3) = EMTDC_VVDC(SS, NT_3(3), 0)
      RVD1_1 = RTCF(IVD1_1) * P3PH3(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),&
     &RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,867718294,RVD1_1,"Pd")
      P_POC = RVD1_1
      RVD1_1 = RTCF(IVD1_1) * Q3PH3(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3),&
     &RTCF(IVD1_1+2),0)
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,867718294,RVD1_1,"Qd")
      Q_POC = RVD1_1
      CALL DGTL_RMS3(256,SS,NT_3(1),NT_3(2),NT_3(3),RTCF(IVD1_1+3),1.0,0&
     &.0,RVD1_1)
      RVD1_1 = RTCF(IVD1_1+1)*RVD1_1
      IF (UPDATE_AG) CALL PSCAD_AGR2(ICALL_NO,867718294,RVD1_1,"Vd")
      Vrms_POC = RVD1_1
      IF (FIRSTSTEP) THEN
        CALL PSCAD_AGI2(ICALL_NO,867718294,1,"hide1")
        CALL PSCAD_AGI2(ICALL_NO,867718294,1,"hide2")
      ENDIF

! 180:[pgb] Output Channel 'Q_POC'

      PGB(IPGB+1) = Q_POC

! 190:[pgb] Output Channel 'P_POC'

      PGB(IPGB+2) = P_POC

! 200:[pgb] Output Channel 'Vrms_POC'

      PGB(IPGB+3) = Vrms_POC

! 210:[pgb] Output Channel 'Igrid_POC'

      DO IVD1_1 = 1, 3
         PGB(IPGB+4+IVD1_1-1) = Igrid_POC(IVD1_1)
      ENDDO

! 220:[pgb] Output Channel 'Vgrid_POC'

      DO IVD1_1 = 1, 3
         PGB(IPGB+7+IVD1_1-1) = Vgrid_POC(IVD1_1)
      ENDDO

! 250:[SimpleSF_15_2_1]  
      CALL SimpleSF_15_2_1Out()


!---------------------------------------
! Feedbacks and transfers to storage 
!---------------------------------------

      STOF(ISTOF + 5) = RT_4
      STOF(ISTOF + 6) = Vbase
      STOF(ISTOF + 7) = Fbase
      STOF(ISTOF + 8) = Rated_MW
      STOF(ISTOF + 10) = Q_POC
      STOF(ISTOF + 11) = P_POC
      STOF(ISTOF + 12) = Vrms_POC
      STOF(ISTOF + 19) = RT_6
      STOF(ISTOF + 20) = RT_7
      STOF(ISTOF + 23) = RT_10

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 12 + IT_0) = Igrid_POC(IT_0)
         STOF(ISTOF + 15 + IT_0) = Vgrid_POC(IT_0)
      END DO


!---------------------------------------
! Close Model Data read 
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE PVFarm_GFL_GFM_2_1Dyn_Begin(N_units)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    SimpleSF_15_2_1Dyn_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: N_units! Aliases: UN

! Electrical Node Indices

! Control Signals
      REAL     RT_4, Vbase, Fbase, Rated_MW, RT_6
      REAL     RT_7, RT_10

! Internal Variables
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4
      REAL     RVD1_1, RVD1_2, RVD1_3, RVD1_4
      REAL     RVD1_5, RVD1_6

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 24
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 4
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 10:[time-sig] Output of Simulation Time 

! 20:[compare] Single Input Level Comparator 

! 30:[const] Real Constant 
      RT_10 = 1.0

! 50:[const] Real Constant 'Turbine Rated Active Power'
      Rated_MW = 0.25

! 60:[const] Real Constant 'Hz'
      Fbase = 60.0

! 70:[const] Real Constant 'Pref'
      RT_7 = 0.05

! 80:[const] Real Constant 'kV'
      Vbase = 33.0

! 90:[const] Real Constant 'Vref'
      RT_4 = 1.0

! 110:[const] Real Constant 'Qref'
      RT_6 = 2.0

! 120:[time-sig] Output of Simulation Time 

! 130:[compare] Single Input Level Comparator 

! 150:[mult] Multiplier 

! 160:[mult] Multiplier 

! 170:[div] Divider 

! 230:[gain] Gain Block 

! 240:[gain] Gain Block 

! 250:[SimpleSF_15_2_1]  
      CALL SimpleSF_15_2_1Dyn_Begin(NINT(N_units), Fbase, Rated_MW, Vbas&
     &e, 0.65, 1.4, 0.2, 0, 1, 0.1, 0.25, 0.2)


! 1:[xfmr-3p2w] 3 Phase 2 Winding Transformer 'T1'
      CALL COMPONENT_ID(ICALL_NO,2014808387)
      RVD1_1 = ONE_3RD*100.0
      RVD1_2 = 33.0
      RVD1_3 = 120.0*SQRT_1BY3
      CALL E_TF2W_CFG((IXFMR + 1),0,RVD1_1,60.0,0.08,0.0,RVD1_2,RVD1_3,1&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 2),0,RVD1_1,60.0,0.08,0.0,RVD1_2,RVD1_3,1&
     &.0)
      CALL E_TF2W_CFG((IXFMR + 3),0,RVD1_1,60.0,0.08,0.0,RVD1_2,RVD1_3,1&
     &.0)
      IF (0.0 .LT. 1.0E-6) THEN
        RVD1_5 = 0.0
        RVD1_6 = 0.0
        IVD1_1 = 0
      ELSE
        RVD1_6 = 0.0
        RVD1_4 = 6.0/(100.0*RVD1_6)
        RVD1_5 = RVD1_4*RVD1_2*RVD1_2
        RVD1_6 = RVD1_4*RVD1_3*RVD1_3
        IVD1_1 = 1
      ENDIF
      CALL E_BRANCH_CFG( (IBRCH+4),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+5),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+6),SS,IVD1_1,0,0,RVD1_5,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+7),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+8),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL E_BRANCH_CFG( (IBRCH+9),SS,IVD1_1,0,0,RVD1_6,0.0,0.0)
      CALL TSAT1_CFG( (IBRCH+10), (IBRCH+11), (IBRCH+12),SS,RVD1_1,RVD1_&
     &3,0.2,1.17,60.0,0.0,1.0,0.0)

! 1:[newpi] Coupled Pi Section Transmission Line 'Line1'
      CALL COMPONENT_ID(ICALL_NO,1145273775)
      CALL PI3_SECTION_CFG(3,1,0, 33.0,100.0,60.0,500000.0,3.36786e-08,5&
     &.93346e-07,1.933869e-08,5.58072e-07,1.96578e-06,1.277271e-08,RVD1_&
     &1,RVD1_2,RVD1_3,RVD1_4,RVD1_5,RVD1_6,IVD1_1,IVD1_2,IVD1_3,IVD1_4)
      CALL E_BRANCH_CFG( (IBRCH+13),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+14),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+15),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+16),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+17),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+18),SS,0,0,IVD1_3,0.0,0.0,RVD1_6)
      CALL E_BRANCH_CFG( (IBRCH+19),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+20),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+21),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+22),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+23),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL E_BRANCH_CFG( (IBRCH+24),SS,0,0,IVD1_4,0.0,0.0,RVD1_3)
      CALL COUPLED_PI3_TF_CFG((IXFMR + 4),2,RVD1_1,RVD1_2,RVD1_4,RVD1_5)

      RETURN
      END

!=======================================================================

      SUBROUTINE PVFarm_GFL_GFM_2_1Out_Begin(N_units)

!---------------------------------------
! Standard includes 
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations 
!---------------------------------------

!     SUBR    SimpleSF_15_2_1Out_Begin  ! 

!---------------------------------------
! Variable Declarations 
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: N_units! Aliases: UN

! Electrical Node Indices
      INTEGER  NT_3(3)

! Control Signals
      REAL     RT_4, Vbase, Fbase, Rated_MW, RT_6
      REAL     RT_7, RT_10

! Internal Variables
      INTEGER  IVD1_1

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH, IXFMR             ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices 
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 24
      IXFMR     = NXFMR
      NXFMR     = NXFMR + 4
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup 
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         NT_3(IT_0) = NODE(INODE + 9 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition 
!---------------------------------------


! 30:[const] Real Constant 
      RT_10 = 1.0

! 50:[const] Real Constant 'Turbine Rated Active Power'
      Rated_MW = 0.25

! 60:[const] Real Constant 'Hz'
      Fbase = 60.0

! 70:[const] Real Constant 'Pref'
      RT_7 = 0.05

! 80:[const] Real Constant 'kV'
      Vbase = 33.0

! 90:[const] Real Constant 'Vref'
      RT_4 = 1.0

! 110:[const] Real Constant 'Qref'
      RT_6 = 2.0

! 140:[multimeter] Multimeter 
      IVD1_1 = NRTCF
      NRTCF  = NRTCF + 5
      IF (ABS(1.0) .GT. 1.0E-20) THEN
        RTCF(IVD1_1) = 1.0/ABS(1.0)
      ELSE
        RTCF(IVD1_1) = 1.0
      ENDIF
      IF (ABS(Vbase) .GT. 1.0E-20) THEN
        RTCF(IVD1_1+1) = 1.0/ABS(Vbase)
      ELSE
        RTCF(IVD1_1+1) = 1.0
      ENDIF
      RTCF(IVD1_1+2) = 0.02
      RTCF(IVD1_1+3) = Fbase

! 180:[pgb] Output Channel 'Q_POC'

! 190:[pgb] Output Channel 'P_POC'

! 200:[pgb] Output Channel 'Vrms_POC'

! 210:[pgb] Output Channel 'Igrid_POC'

! 220:[pgb] Output Channel 'Vgrid_POC'

! 250:[SimpleSF_15_2_1]  
      CALL SimpleSF_15_2_1Out_Begin(NINT(N_units), Fbase, Rated_MW, Vbas&
     &e, 0.65, 1.4, 0.2, 0, 1, 0.1, 0.25, 0.2)


      RETURN
      END

